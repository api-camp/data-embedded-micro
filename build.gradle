plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.de314.data'
version = '0.1.1'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.RC1")
}

dependencies {
	implementation 'com.de314.data:data-embedded-library:0.2.0'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.cloud:spring-cloud-gcp-starter-pubsub'
//	implementation 'org.springframework.cloud:spring-cloud-gcp-starter-storage'
//	implementation 'org.springframework.cloud:spring-cloud-starter-config'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testCompile 'org.projectlombok:lombok:1.18.10'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

task dockerBuild(type: Exec) {
	workingDir projectDir
	commandLine 'sh', "cli/docker-build.sh", version
}

dockerBuild.shouldRunAfter test

task dockerRelease(type: Exec) {
	workingDir projectDir
	commandLine 'sh', "cli/docker-release.sh", version
}

dockerRelease.shouldRunAfter dockerBuild

task doRelease(type: Exec) {
	workingDir projectDir
	commandLine 'sh', "cli/do-release.sh", version
}

doRelease.shouldRunAfter dockerRelease